f <- function(x) {
        g <- function(y) {
                y + z
        }
        z <- 4
        x + g(x)
}

f(3)
x=3
z= 4
g(x) = x+z = 3+4 = 7

x+ g(x) = 3+7 = 10

lapply(subset(iris, subset = iris$Species == "virginica"
, select=c(Sepal.Length)), mean)

apply(iris[, 1:4], 2, mean)

library(data.table)

DT<-as.data.table(DF)

# EDIT: To get the column name 'Mean':

DT[, list(Mean = rowMeans(.SD)), by = ID]

#      ID     Mean
# [1,]  A 3.666667
# [2,]  B 4.333333
# [3,]  C 3.333333
# [4,]  D 4.666667
# [5,]  E 4.333333

5:78
005-074
in=0[0-7][0-9].cv
ex1= 00[1-4].cv
ex2 = 07[5-9]

allfiles = list.files() 
csvfiles = list.files(pattern='csv') 
allfiles[!allfiles %in% csvfiles]

sprintf("name_%03d", a)

setwd("target_dir/")
 
file_list <- <span class="skimlinks-unlinked">list.files</span>()
 
for (file in file_list){
       
  # if the merged dataset doesn't exist, create it
  if (!exists("dataset")){
    dataset <- <span class="skimlinks-unlinked">read.table(file</span>, header=TRUE, sep="\t")
  }
   
  # if the merged dataset does exist, append to it
  if (exists("dataset")){
    temp_dataset <-<span class="skimlinks-unlinked">read.table(file</span>, header=TRUE, sep="\t")
    dataset<-rbind(dataset, temp_dataset)
    rm(temp_dataset)
  }
 
}

-----------
pollutantmean <- function(mydir, indice){
      setwd(mydir)
      #list.files(pattern='results/[A-Z]+/data-.*\\.csv', recursive=TRUE)
      mylist <- indice
      myfile_list <- sprintf("%03d.csv", mylist)
      for (file in myfile_list)
            {
            if (!exists("myset"))
                  {
                  myset<-read.table(file, header = TRUE, sep=",")
                  }
            else{
                  currentset<-read.table(file, header = TRUE, sep=",")
                  myset<-rbind(myset, currentset)
                  rm(currentset)
                  
            }
            return(myset)
            }